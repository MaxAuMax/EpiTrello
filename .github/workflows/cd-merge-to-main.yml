name: CD - Auto Merge to Main

on:
  push:
    branches:
      - develop

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  scan_ruby:
    name: Security Scan - Ruby
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities
        run: bin/brakeman --no-pager

  scan_js:
    name: Security Scan - JavaScript
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential default-libmysqlclient-dev git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: mysql2://127.0.0.1:3306
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Docker build
        run: docker build -t epitrello-prod-test .

  merge-to-main:
    name: Merge Develop to Main
    runs-on: ubuntu-latest
    needs: [lint, scan_ruby, scan_js, test, docker-build]
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge develop into main
        run: |
          git fetch origin main:main
          git checkout main
          git merge --no-ff origin/develop -m "chore: merge develop into main [skip ci]"
          git push origin main

      - name: Create deployment tag
        run: |
          TAG="v$(date +'%Y%m%d-%H%M%S')"
          git tag -a "$TAG" -m "Automated deployment from develop to main"
          git push origin "$TAG"
          echo "Created deployment tag: $TAG"

  notify-success:
    name: Notify Deployment Success
    runs-on: ubuntu-latest
    needs: merge-to-main
    if: success()
    
    steps:
      - name: Success message
        run: |
          echo "üöÄ Successfully merged develop to main!"
          echo "‚úÖ All checks passed"
          echo "üì¶ Deployment tag created"

  notify-failure:
    name: Notify Deployment Failure
    runs-on: ubuntu-latest
    needs: [lint, scan_ruby, scan_js, test, docker-build, merge-to-main]
    if: failure()
    
    steps:
      - name: Failure message
        run: |
          echo "‚ùå Failed to merge develop to main"
          echo "Please check the logs and fix any issues"
          exit 1
