name: CI - Pull Request Checks

on:
  pull_request:
    branches:
      - develop

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  scan_ruby:
    name: Security Scan - Ruby
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    name: Security Scan - JavaScript
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        env:
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: ""
        run: bundle exec rails importmap:audit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential default-libmysqlclient-dev git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: mysql2://root@127.0.0.1:3306
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: ""
        run: |
          bin/rails db:create db:migrate
          bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Docker build
        run: docker build -t epitrello-test .

  pr-status:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [lint, scan_ruby, scan_js, test, docker-build]
    if: always()
    
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [ "${{ needs.lint.result }}" == "success" ] && \
             [ "${{ needs.scan_ruby.result }}" == "success" ] && \
             [ "${{ needs.scan_js.result }}" == "success" ] && \
             [ "${{ needs.test.result }}" == "success" ] && \
             [ "${{ needs.docker-build.result }}" == "success" ]; then
            echo "✅ All checks passed! PR is ready for review."
            exit 0
          else
            echo "❌ Some checks failed. Please fix the issues."
            exit 1
          fi
